@page "/movies"
@using MovieRental_V2.Shared.Dtos
@using MovieRental_V2.Shared.Logic
@inject NavigationManager Navigation
@attribute [Authorize]
@inject MovieManager MovieManager

<PageTitle>Weather forecast</PageTitle>



@if (Movies == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container mt-10">
        <div class="flex flex-row justify-between items-center">
            <div>
                <h1>Weather forecast</h1>
                <p>This component demonstrates fetching data from the server.</p>
            </div>
            <button class="btn btn-info text-white" @onclick='() => Navigation.NavigateTo("/movie")'>Add Movie</button>
        </div>
       
        <table class="table">
            <thead>
            <tr>
                <th>Title</th>
                <th>Directeur</th>
                <th>Gehuurd door</th>
                <th>Beschikbaarheid</th>
                <th>Acties</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var movie in Movies)
            {
                <tr>
                    <td>@movie.Title</td>
                    <td>@movie.Director</td>
                    <td>
                        @if (movie.OwnerName != null)
                        {
                            @movie.OwnerName
                        }
                        else
                        {
                            <span>Niet gehuurd</span>
                        }
                    </td>
                    <td>
                        @if (movie.Available)
                        {
                            <span>beschikbaar</span>
                        }
                        else
                        {
                            <span>Verhuurd</span>
                        }
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => { RentMovie(movie.Id); }">Huren</button>
                        <button class="btn btn-info text-white" @onclick='() => { Navigation.NavigateTo($"/movie/{movie.Id}"); }'>Bewerken</button>
                        <button class="btn btn-danger" @onclick="() => { DeleteMovie(movie.Id); }">Verwijderen</button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}

@code {
    private List<MovieDto>? Movies;

    protected override async Task OnInitializedAsync()
    {
        await LoadMovies();
    }
    
    
    private async Task LoadMovies()
    {
        Movies = await MovieManager.GetMoviesAsync();
    }
    
    
    private async Task RentMovie(int movieId)
    {
        bool success = await MovieManager.RentMovieAsync(movieId);

        if (success)
        {
            await LoadMovies();
        }
    }
    
    private async Task DeleteMovie(int movieId)
    {
        bool success = await MovieManager.DeleteMovieAsync(movieId);

        if (success)
        {
            await LoadMovies();
        }
    }
}

